"""Initial migration

Revision ID: dba228c5c91e
Revises:
Create Date: 2024-11-02 00:50:40.375208

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "dba228c5c91e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__activities")),
    )
    op.create_index(op.f("ix__activities__name"), "activities", ["name"], unique=True)
    op.create_table(
        "awesome_datas",
        sa.Column("from_user_id", sa.BigInteger(), nullable=True),
        sa.Column("description", sa.String(length=512), nullable=False),
        sa.Column("data", sa.String(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__awesome_datas")),
    )
    op.create_table(
        "employees",
        sa.Column("login", sa.String(length=30), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__employees")),
        sa.UniqueConstraint("login", name=op.f("uq__employees__login")),
    )
    op.create_table(
        "global_events",
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("description", sa.String(length=2048), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__global_events")),
    )
    op.create_index(
        op.f("ix__global_events__description"),
        "global_events",
        ["description"],
        unique=False,
    )
    op.create_index(
        op.f("ix__global_events__name"), "global_events", ["name"], unique=False
    )
    op.create_table(
        "regions",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__regions")),
    )
    op.create_index(op.f("ix__regions__name"), "regions", ["name"], unique=True)
    op.create_table(
        "text_chunks",
        sa.Column("key", sa.String(length=64), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("weight", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__text_chunks")),
        sa.UniqueConstraint("key", "weight", name="_key_weight_uc"),
    )
    op.create_table(
        "users",
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__users")),
    )
    op.create_index(
        op.f("ix__users__telegram_id"), "users", ["telegram_id"], unique=True
    )
    op.create_table(
        "volunteer_types",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__volunteer_types")),
    )
    op.create_index(
        op.f("ix__volunteer_types__name"), "volunteer_types", ["name"], unique=False
    )
    op.create_table(
        "districts",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=255), nullable=False),
        sa.Column("region_id", sa.BigInteger(), nullable=False),
        sa.Column("parent_id", sa.BigInteger(), nullable=True),
        sa.Column("invite_link", sa.String(length=255), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["districts.id"],
            name=op.f("fk__districts__parent_id__districts"),
        ),
        sa.ForeignKeyConstraint(
            ["region_id"],
            ["regions.id"],
            name=op.f("fk__districts__region_id__regions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__districts")),
    )
    op.create_index(op.f("ix__districts__name"), "districts", ["name"], unique=False)
    op.create_index(
        op.f("ix__districts__parent_id"), "districts", ["parent_id"], unique=False
    )
    op.create_index(
        op.f("ix__districts__region_id"), "districts", ["region_id"], unique=False
    )
    op.create_index(op.f("ix__districts__type"), "districts", ["type"], unique=False)
    op.create_table(
        "global_event_users",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("global_event_id", sa.BigInteger(), nullable=False),
        sa.Column("is_subscribed", sa.Boolean(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["global_event_id"],
            ["global_events.id"],
            name=op.f("fk__global_event_users__global_event_id__global_events"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk__global_event_users__user_id__users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__global_event_users")),
        sa.UniqueConstraint(
            "user_id", "global_event_id", name="_user_id_global_event_id_uc"
        ),
    )
    op.create_index(
        op.f("ix__global_event_users__global_event_id"),
        "global_event_users",
        ["global_event_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__global_event_users__is_subscribed"),
        "global_event_users",
        ["is_subscribed"],
        unique=False,
    )
    op.create_index(
        op.f("ix__global_event_users__user_id"),
        "global_event_users",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "global_mailings",
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("description", sa.String(length=3072), nullable=False),
        sa.Column("global_event_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["global_event_id"],
            ["global_events.id"],
            name=op.f("fk__global_mailings__global_event_id__global_events"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__global_mailings")),
    )
    op.create_index(
        op.f("ix__global_mailings__description"),
        "global_mailings",
        ["description"],
        unique=False,
    )
    op.create_index(
        op.f("ix__global_mailings__global_event_id"),
        "global_mailings",
        ["global_event_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__global_mailings__name"), "global_mailings", ["name"], unique=False
    )
    op.create_table(
        "organizations",
        sa.Column("creator_id", sa.BigInteger(), nullable=False),
        sa.Column("district_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("is_checked", sa.Boolean(), nullable=True),
        sa.Column("is_superorganization", sa.Boolean(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
            name=op.f("fk__organizations__creator_id__users"),
        ),
        sa.ForeignKeyConstraint(
            ["district_id"],
            ["districts.id"],
            name=op.f("fk__organizations__district_id__districts"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__organizations")),
    )
    op.create_index(
        op.f("ix__organizations__creator_id"),
        "organizations",
        ["creator_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__organizations__district_id"),
        "organizations",
        ["district_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__organizations__name"), "organizations", ["name"], unique=False
    )
    op.create_table(
        "profiles",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("district_id", sa.BigInteger(), nullable=False),
        sa.Column("region_id", sa.BigInteger(), nullable=False),
        sa.Column("is_event_organizer", sa.Boolean(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["district_id"],
            ["districts.id"],
            name=op.f("fk__profiles__district_id__districts"),
        ),
        sa.ForeignKeyConstraint(
            ["region_id"], ["regions.id"], name=op.f("fk__profiles__region_id__regions")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk__profiles__user_id__users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__profiles")),
    )
    op.create_index(
        op.f("ix__profiles__district_id"), "profiles", ["district_id"], unique=False
    )
    op.create_index(
        op.f("ix__profiles__is_event_organizer"),
        "profiles",
        ["is_event_organizer"],
        unique=False,
    )
    op.create_index(
        op.f("ix__profiles__region_id"), "profiles", ["region_id"], unique=False
    )
    op.create_index(op.f("ix__profiles__user_id"), "profiles", ["user_id"], unique=True)
    op.create_table(
        "activity_organizations",
        sa.Column("activity_id", sa.BigInteger(), nullable=False),
        sa.Column("organization_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
            name=op.f("fk__activity_organizations__activity_id__activities"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("fk__activity_organizations__organization_id__organizations"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__activity_organizations")),
    )
    op.create_index(
        op.f("ix__activity_organizations__activity_id"),
        "activity_organizations",
        ["activity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__activity_organizations__organization_id"),
        "activity_organizations",
        ["organization_id"],
        unique=False,
    )
    op.create_table(
        "activity_profiles",
        sa.Column("profile_id", sa.BigInteger(), nullable=False),
        sa.Column("activity_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
            name=op.f("fk__activity_profiles__activity_id__activities"),
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profiles.id"],
            name=op.f("fk__activity_profiles__profile_id__profiles"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__activity_profiles")),
    )
    op.create_index(
        op.f("ix__activity_profiles__activity_id"),
        "activity_profiles",
        ["activity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__activity_profiles__profile_id"),
        "activity_profiles",
        ["profile_id"],
        unique=False,
    )
    op.create_table(
        "events",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("type", sa.String(length=255), nullable=False),
        sa.Column("organization_id", sa.BigInteger(), nullable=False),
        sa.Column("district_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["district_id"],
            ["districts.id"],
            name=op.f("fk__events__district_id__districts"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("fk__events__organization_id__organizations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__events")),
    )
    op.create_index(
        op.f("ix__events__district_id"), "events", ["district_id"], unique=False
    )
    op.create_index(op.f("ix__events__name"), "events", ["name"], unique=False)
    op.create_index(
        op.f("ix__events__organization_id"), "events", ["organization_id"], unique=False
    )
    op.create_index(op.f("ix__events__type"), "events", ["type"], unique=False)
    op.create_table(
        "volunteer_type_profiles",
        sa.Column("volunteer_type_id", sa.BigInteger(), nullable=False),
        sa.Column("profile_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profiles.id"],
            name=op.f("fk__volunteer_type_profiles__profile_id__profiles"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["volunteer_type_id"],
            ["volunteer_types.id"],
            name=op.f(
                "fk__volunteer_type_profiles__volunteer_type_id__volunteer_types"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__volunteer_type_profiles")),
    )
    op.create_index(
        op.f("ix__volunteer_type_profiles__profile_id"),
        "volunteer_type_profiles",
        ["profile_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__volunteer_type_profiles__volunteer_type_id"),
        "volunteer_type_profiles",
        ["volunteer_type_id"],
        unique=False,
    )
    op.create_table(
        "activity_events",
        sa.Column("activity_id", sa.BigInteger(), nullable=False),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
            name=op.f("fk__activity_events__activity_id__activities"),
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
            name=op.f("fk__activity_events__event_id__events"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__activity_events")),
    )
    op.create_index(
        op.f("ix__activity_events__activity_id"),
        "activity_events",
        ["activity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__activity_events__event_id"),
        "activity_events",
        ["event_id"],
        unique=False,
    )
    op.create_table(
        "mailings",
        sa.Column("is_executed", sa.Boolean(), nullable=True),
        sa.Column("start_execute_datetime", sa.DateTime(), nullable=True),
        sa.Column("end_execute_datetime", sa.DateTime(), nullable=True),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name=op.f("fk__mailings__event_id__events")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__mailings")),
    )
    op.create_index(
        op.f("ix__mailings__end_execute_datetime"),
        "mailings",
        ["end_execute_datetime"],
        unique=False,
    )
    op.create_index(
        op.f("ix__mailings__event_id"), "mailings", ["event_id"], unique=False
    )
    op.create_index(
        op.f("ix__mailings__is_executed"), "mailings", ["is_executed"], unique=False
    )
    op.create_index(
        op.f("ix__mailings__start_execute_datetime"),
        "mailings",
        ["start_execute_datetime"],
        unique=False,
    )
    op.create_table(
        "volunteer_type_events",
        sa.Column("volunteer_type_id", sa.BigInteger(), nullable=False),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
            name=op.f("fk__volunteer_type_events__event_id__events"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["volunteer_type_id"],
            ["volunteer_types.id"],
            name=op.f("fk__volunteer_type_events__volunteer_type_id__volunteer_types"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__volunteer_type_events")),
    )
    op.create_index(
        op.f("ix__volunteer_type_events__event_id"),
        "volunteer_type_events",
        ["event_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__volunteer_type_events__volunteer_type_id"),
        "volunteer_type_events",
        ["volunteer_type_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix__volunteer_type_events__volunteer_type_id"),
        table_name="volunteer_type_events",
    )
    op.drop_index(
        op.f("ix__volunteer_type_events__event_id"), table_name="volunteer_type_events"
    )
    op.drop_table("volunteer_type_events")
    op.drop_index(op.f("ix__mailings__start_execute_datetime"), table_name="mailings")
    op.drop_index(op.f("ix__mailings__is_executed"), table_name="mailings")
    op.drop_index(op.f("ix__mailings__event_id"), table_name="mailings")
    op.drop_index(op.f("ix__mailings__end_execute_datetime"), table_name="mailings")
    op.drop_table("mailings")
    op.drop_index(op.f("ix__activity_events__event_id"), table_name="activity_events")
    op.drop_index(
        op.f("ix__activity_events__activity_id"), table_name="activity_events"
    )
    op.drop_table("activity_events")
    op.drop_index(
        op.f("ix__volunteer_type_profiles__volunteer_type_id"),
        table_name="volunteer_type_profiles",
    )
    op.drop_index(
        op.f("ix__volunteer_type_profiles__profile_id"),
        table_name="volunteer_type_profiles",
    )
    op.drop_table("volunteer_type_profiles")
    op.drop_index(op.f("ix__events__type"), table_name="events")
    op.drop_index(op.f("ix__events__organization_id"), table_name="events")
    op.drop_index(op.f("ix__events__name"), table_name="events")
    op.drop_index(op.f("ix__events__district_id"), table_name="events")
    op.drop_table("events")
    op.drop_index(
        op.f("ix__activity_profiles__profile_id"), table_name="activity_profiles"
    )
    op.drop_index(
        op.f("ix__activity_profiles__activity_id"), table_name="activity_profiles"
    )
    op.drop_table("activity_profiles")
    op.drop_index(
        op.f("ix__activity_organizations__organization_id"),
        table_name="activity_organizations",
    )
    op.drop_index(
        op.f("ix__activity_organizations__activity_id"),
        table_name="activity_organizations",
    )
    op.drop_table("activity_organizations")
    op.drop_index(op.f("ix__profiles__user_id"), table_name="profiles")
    op.drop_index(op.f("ix__profiles__region_id"), table_name="profiles")
    op.drop_index(op.f("ix__profiles__is_event_organizer"), table_name="profiles")
    op.drop_index(op.f("ix__profiles__district_id"), table_name="profiles")
    op.drop_table("profiles")
    op.drop_index(op.f("ix__organizations__name"), table_name="organizations")
    op.drop_index(op.f("ix__organizations__district_id"), table_name="organizations")
    op.drop_index(op.f("ix__organizations__creator_id"), table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(op.f("ix__global_mailings__name"), table_name="global_mailings")
    op.drop_index(
        op.f("ix__global_mailings__global_event_id"), table_name="global_mailings"
    )
    op.drop_index(
        op.f("ix__global_mailings__description"), table_name="global_mailings"
    )
    op.drop_table("global_mailings")
    op.drop_index(
        op.f("ix__global_event_users__user_id"), table_name="global_event_users"
    )
    op.drop_index(
        op.f("ix__global_event_users__is_subscribed"), table_name="global_event_users"
    )
    op.drop_index(
        op.f("ix__global_event_users__global_event_id"), table_name="global_event_users"
    )
    op.drop_table("global_event_users")
    op.drop_index(op.f("ix__districts__type"), table_name="districts")
    op.drop_index(op.f("ix__districts__region_id"), table_name="districts")
    op.drop_index(op.f("ix__districts__parent_id"), table_name="districts")
    op.drop_index(op.f("ix__districts__name"), table_name="districts")
    op.drop_table("districts")
    op.drop_index(op.f("ix__volunteer_types__name"), table_name="volunteer_types")
    op.drop_table("volunteer_types")
    op.drop_index(op.f("ix__users__telegram_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("text_chunks")
    op.drop_index(op.f("ix__regions__name"), table_name="regions")
    op.drop_table("regions")
    op.drop_index(op.f("ix__global_events__name"), table_name="global_events")
    op.drop_index(op.f("ix__global_events__description"), table_name="global_events")
    op.drop_table("global_events")
    op.drop_table("employees")
    op.drop_table("awesome_datas")
    op.drop_index(op.f("ix__activities__name"), table_name="activities")
    op.drop_table("activities")
    # ### end Alembic commands ###
